{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.jsx","components/Contacts/ContactListItem/ContactListItem.styled.jsx","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","App.styled.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","filterChange","createAction","filterBlur","deleteContact","addContact","name","number","payload","id","uuidv4","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","actions","onChange","autoComplete","type","pattern","title","required","Input","input","getFilter","state","contacts","filter","getFilteredItems","items","getItems","item","toLowerCase","includes","Filter","useSelector","event","onBlur","Item","li","props","index","ContactListItem","onClick","onDeleteContact","List","ul","ContactList","map","Container","div","App","itemsReducer","createReducer","action","isAdded","forEach","alert","filterReducer","_","combineReducers","middlewares","store","configureStore","reducer","phonebookReducer","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEaA,EAAOC,IAAOC,KAAV,0FAMJC,EAAQF,IAAOG,MAAV,oI,sBCLLC,EAAeC,YAAa,0BAE5BC,EAAaD,YAAa,wBAE1BE,EAAgBF,YAAa,2BAE7BG,EAAaH,YACxB,wBACA,gBAAGI,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACrBC,QAAS,CAAEC,GAAIC,cAAUJ,OAAMC,c,OCLpB,SAASI,IACtB,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOL,EAAP,KAAeO,EAAf,KACMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACN,IAAK,OACHO,EAAQO,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAeN,OACE,eAACxB,EAAD,CAAMyB,SAPa,SAACH,GACpBA,EAAEI,iBACFP,EAASQ,EAAmB,CAAEjB,OAAMC,YANpCM,EAAQ,IACRC,EAAU,KAUV,UACE,eAACf,EAAD,kBAEE,uBACEqB,MAAOd,EACPkB,SAAUP,EACVQ,aAAa,MACbC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,eAAC9B,EAAD,oBAEE,uBACEqB,MAAOb,EACPiB,SAAUP,EACVQ,aAAa,MACbC,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQH,KAAK,SAAb,4BCnEC,I,EAAM3B,EAAQF,IAAOG,MAAV,wEAKL8B,EAAQjC,IAAOkC,MAAV,iDCPLC,EAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,QAItCC,EAAmB,SAACH,GAC/B,IAAMI,EAHgB,SAACJ,GAAD,OAAWA,EAAMC,SAASG,MAGlCC,CAASL,GACjBE,EAASH,EAAUC,GACzB,OAAOI,EAAMF,QAAO,SAACI,GAAD,OAClBA,EAAKjC,KAAKkC,cAAcC,SAASN,EAAOK,mBCF7B,SAASE,IACtB,IAAMP,EAASQ,YAAYX,GACrBjB,EAAWC,cAOjB,OACE,eAAC,EAAD,oCAEE,cAACc,EAAD,CAAOV,MAAOe,EAAQX,SARH,SAACoB,GAAD,OACrB7B,EAASQ,EAAqBqB,EAAMzB,OAAOC,SAOOyB,OAL/B,kBAAM9B,EAASQ,EAAmB,WCXlD,IAAMuB,EAAOjD,IAAOkD,GAAV,qZAcb,SAACC,GACD,OAAIA,EAAMC,MAAQ,IAAM,EACf,+CAEF,iDCAIC,I,IAAAA,EAff,YAA2C,IAAhBX,EAAe,EAAfA,KAAMU,EAAS,EAATA,MACvBxC,EAAqB8B,EAArB9B,GAAIH,EAAiBiC,EAAjBjC,KAAMC,EAAWgC,EAAXhC,OACZQ,EAAWC,cAGjB,OACE,eAAC8B,EAAD,CAAMG,MAAOA,EAAb,UACG3C,EADH,KACWC,EACT,wBAAQmB,KAAK,SAASyB,QAAS,kBALX,SAAC1C,GAAD,OAAQM,EAASQ,EAAsBd,IAKtB2C,CAAgB3C,IAArD,wBCZO4C,EAAOxD,IAAOyD,GAAV,gECKF,SAASC,IACtB,IAAMlB,EAAQM,YAAYP,GAE1B,OACE,cAACiB,EAAD,UACGhB,EAAMmB,KAAI,SAACjB,EAAMU,GAChB,OAAO,cAAC,EAAD,CAA+BV,KAAMA,EAAMU,MAAOA,GAA5BV,EAAK9B,SCXnC,IAAMgD,EAAY5D,IAAO6D,IAAV,iGCIP,SAASC,IACtB,OACE,eAACF,EAAD,WACE,2CACA,cAAC9C,EAAD,IACA,0CACA,cAAC+B,EAAD,IACA,cAACa,EAAD,O,oCCRAK,EAAeC,YAAc,IAAD,mBAC/BtC,GAAqB,SAACU,EAAO6B,GAC5B,IAAIC,GAAU,EAOd,OANA9B,EAAM+B,SAAQ,SAACzB,GACTA,EAAKjC,OAASwD,EAAOtD,QAAQF,OAC/ByD,GAAU,MAIVA,GACFE,MAAM,GAAD,OAAIH,EAAOtD,QAAQF,KAAnB,4BACE2B,GAEH,GAAN,mBAAWA,GAAX,CAAkB6B,EAAOtD,aAbK,cAgB/Be,GAAwB,SAACU,EAAO6B,GAAR,OACvB7B,EAAME,QAAO,SAACI,GAAD,OAAUA,EAAK9B,KAAOqD,EAAOtD,cAjBZ,IAoB5B0D,EAAgBL,YAAc,IAAD,mBAChCtC,GAAuB,SAAC4C,EAAGL,GAAJ,OAAeA,EAAOtD,WADb,cAGhCe,GAAqB,SAAC4C,EAAGL,GAAJ,OAAeA,EAAOtD,WAHX,IAMpB4D,cAAgB,CAC7B/B,MAAOuB,EACPzB,OAAQ+B,IC1BJG,EAAc,GAgCb,IAAMC,EAAQC,YAAe,CAClCC,QAAS,CACPtC,SAAUuC,GAEZC,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAOP,IAChCQ,UAAUC,IClCZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAACX,EAAD,QAGJuB,SAASC,eAAe,W","file":"static/js/main.403c13b3.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  width: 350px;\n  padding: 5px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterChange = createAction(\"phonebook/filterChange\");\r\n\r\nexport const filterBlur = createAction(\"phonebook/filterBlur\");\r\n\r\nexport const deleteContact = createAction(\"phonebook/deleteContact\");\r\n\r\nexport const addContact = createAction(\r\n  \"phonebook/addContact\",\r\n  ({ name, number }) => ({\r\n    payload: { id: uuidv4(), name, number },\r\n  })\r\n);\r\n\r\n// ---------------------- без toolkit\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//   type: actionTypes.ADD_CONTACT,\r\n//   payload: { id: uuidv4(), name, number },\r\n// });\r\n\r\n// export const deleteContact = (contactId) => ({\r\n//   type: actionTypes.DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const filterChange = (text) => ({\r\n//   type: actionTypes.FILTER_CHANGE,\r\n//   payload: text,\r\n// });\r\n\r\n// export const filterBlur = (text) => ({\r\n//   type: actionTypes.FILTER_BLUR,\r\n//   payload: text,\r\n// });\r\n","import React from \"react\";\nimport { Form, Label } from \"./ContactForm.styled\";\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n`;\n","export const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getItems = (state) => state.contacts.items;\r\n\r\nexport const getFilteredItems = (state) => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n  return items.filter((item) =>\r\n    item.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n","import { Label, Input } from \"./Filter.styled\";\n// import { connect } from \"react-redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = (event) =>\n    dispatch(actions.filterChange(event.target.value));\n\n  const onFilterBlur = () => dispatch(actions.filterBlur(\"\"));\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input value={filter} onChange={onFilterChange} onBlur={onFilterBlur} />\n    </Label>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     filter: state.contacts.filter,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onFilterChange: (event) =>\n//       dispatch(actions.filterChange(event.target.value)),\n//     onFilterBlur: () => dispatch(actions.filterBlur(\"\")),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  width: 450px;\n  font-size: 20px;\n  border: 2px solid tomato;\n  border-radius: 5px;\n  box-shadow: 0px 2px 3px 3px rgba(34, 60, 80, 0.4);\n  transition: transform 200ms linear;\n  cursor: pointer;\n\n  ${(props) => {\n    if (props.index % 2 === 0) {\n      return \"background-color:#dee2f0; margin-left:-10px;\";\n    }\n    return \"background-color:#9b9ea8; margin-left:10px;\";\n  }}\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n","import { Item } from \"./ContactListItem.styled\";\n\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../../redux/phonebook/phonebook-actions\";\n\nfunction ContactListItem({ item, index }) {\n  const { id, name, number } = item;\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\n\n  return (\n    <Item index={index}>\n      {name}: {number}\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </Item>\n  );\n}\n\nexport default ContactListItem;\n","import styled from \"@emotion/styled\";\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import ContactListItem from \"components/Contacts/ContactListItem/\";\nimport { List } from \"./ContactList.styled\";\n\nimport { useSelector } from \"react-redux\";\nimport { getFilteredItems } from \"../../../redux/phonebook/phonebook-selectors\";\n\nexport default function ContactList() {\n  const items = useSelector(getFilteredItems);\n\n  return (\n    <List>\n      {items.map((item, index) => {\n        return <ContactListItem key={item.id} item={item} index={index} />;\n      })}\n    </List>\n  );\n}\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => {\n//   return {\n//     items: getFilteredItems(items, filter),\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n// export default ContactList;\n","import styled from \"@emotion/styled\";\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/Contacts/ContactList\";\nimport { Container } from \"./App.styled\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../phonebook/phonebook-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addContact]: (state, action) => {\r\n    let isAdded = false;\r\n    state.forEach((item) => {\r\n      if (item.name === action.payload.name) {\r\n        isAdded = true;\r\n        return;\r\n      }\r\n    });\r\n    if (isAdded) {\r\n      alert(`${action.payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [...state, action.payload];\r\n  },\r\n\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.filterChange]: (_, action) => action.payload,\r\n\r\n  [actions.filterBlur]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\n// ------------------------ без toolkit\r\n\r\n// const filterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER_CHANGE:\r\n//       return payload;\r\n\r\n//     case types.FILTER_BLUR:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const itemsReducer = (state = initialItems, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_CONTACT:\r\n//       let isAdded = false;\r\n\r\n//       state.forEach((item) => {\r\n//         if (item.name === payload.name) {\r\n//           isAdded = true;\r\n//           return;\r\n//         }\r\n//       });\r\n\r\n//       if (isAdded) {\r\n//         alert(`${payload.name} is already in contacts`);\r\n//         return state;\r\n//       }\r\n\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE_CONTACT:\r\n//       return state.filter((item) => item.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","// import { combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { configureStore, applyMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV === `development`) {\r\n  middlewares.push(logger);\r\n}\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const middleware = applyMiddleware(logger);\r\n\r\n// const contactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, phonebookReducer),\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(middlewares),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// export default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { store } from \"./redux/store\";\n// import { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}